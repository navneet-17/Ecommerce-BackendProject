# Configure which services to use:
# 1. fakestore
#service.type=fakestore
# 2. selfProduct Service
service.type=self


# Fakestore Config Values
fakestore.api.url=https://fakestoreapi.com
fakestore.api.paths.product=/products

server.error.include-stacktrace=never

# Spring DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/scalerbackendproductservice
spring.datasource.username=scalerbackendproductservice
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql= true

#Disable the spring boot devtools restart
spring.devtools.restart.enabled=false

# Add the actuator endpoints
management.endpoints.web.exposure.include=*

#Adding logging levels for security
logging.level.org.springframework.security=DEBUG

# Port on which the product service runs
#server.port=3000, 3001, 3002 depending on the instance
server.port=${SERVER_PORT}

# Application name for Eureka registration
spring.application.name=productservice

# Eureka client configuration
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.hostname=localhost
eureka.instance.prefer-ip-address=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
#eureka.instance.hostname=localhost
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#Add the auth server (UserService) uri:
#In your Postman request, go to the "Headers" tab and add an Authorization header with the value:

#spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9000


#spring.redis.host=localhost
#spring.redis.port=6379
#spring.redis.password=
#spring.redis.database=0
management.health.redis.enabled=false
