## This is how we will inject the FakeStore v/s Self Service Bean Dynamically ##

### Step-1:  application.properties ###
# Configure which services to use:
# 1. fakestore
service.type=fakestore
# 2. selfProduct Service
#service.type=self
We have commented the service.type=self as we will be injecting the service dynamically which here will be service.type=fakestore .

### Step-2:  ProductServiceConfig ###
package dev.navneet.productservice.config;

import dev.navneet.productservice.services.FakeStoreProductServiceImpl;
import dev.navneet.productservice.services.ProductService;
import dev.navneet.productservice.services.SelfProductServiceImpl;
import org.springframework.boot.autoconfigure.condition.ConditionalOnProperty;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class ProductServiceConfig {

        @Bean
        @ConditionalOnProperty(name = "service.type", havingValue = "self")
        public ProductService selfProductService(SelfProductServiceImpl selfProductServiceImpl) {
            return selfProductServiceImpl;
        }

        @Bean
        @ConditionalOnProperty(name = "service.type", havingValue = "fakestore")
        public FakeStoreProductService fakeStoreProductService(FakeStoreProductServiceImpl fakeStoreProductServiceImpl) {
            return fakeStoreProductServiceImpl;
        }
    }
### Step-3:  Controller Code: ###


